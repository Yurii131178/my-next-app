// components/AvatarPicker/AvatarPicker.tsx

// 'use client';

// const AvatarPicker = () => {
//   return (
//     <div>
//       <label>
//         üì∑ Choose photo
//         <input type="file" accept="image/*" />
//       </label>
//     </div>
//   );
// };

// export default AvatarPicker;

/**–¶–µ–π —ñ–Ω–ø—É—Ç –º–∞—î type="file" —ñ –ø—Ä–∏–π–º–∞—î –ª–∏—à–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è ‚Äì –∑–∞–≤–¥—è–∫–∏ accept="image/*".

//-----------------------------------------//
–î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó
–î–∞–ª—ñ –¥–æ–¥–∞–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –Ω–∞ –∑–º—ñ–Ω—É —Ñ–∞–π–ª—É: */

// components/AvatarPicker/AvatarPicker.tsx

// 'use client';

// const AvatarPicker = () => {
//   const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
//     const file = e.target.files?.[0];
//     console.log('file', file);
//   };

//   return (
//     <div>
//       <label>
//         üì∑ Choose photo
//         <input type="file" accept="image/*" onChange={handleFileChange} />
//       </label>
//     </div>
//   );
// };

// export default AvatarPicker;

//--------------------------------------//

/**=======–î–æ–¥–∞—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ç–∏–ø—É —Ç–∞ —Ä–æ–∑–º—ñ—Ä—É=============//

–í–∏–∫–æ—Ä–∏—Å—Ç–∞—î–º–æ useState –¥–ª—è –ø–æ–º–∏–ª–∫–∏ —Ç–∞ –¥–æ–¥–∞–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏:
- —á–∏ —Ü–µ –¥—ñ–π—Å–Ω–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è;
- —á–∏ –Ω–µ –ø–µ—Ä–µ–≤–∏—â—É—î —Ä–æ–∑–º—ñ—Ä 5MB. */

// components/AvatarPicker/AvatarPicker.tsx

// 'use client';

// import { useState } from 'react';

// const AvatarPicker = () => {
//   const [error, setError] = useState('');

//   const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
//     const file = e.target.files?.[0];
//     setError('');

//     if (file) {
//       // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ç–∏–ø —Ñ–∞–π–ª—É
//       if (!file.type.startsWith('image/')) {
//         setError('Only images');
//         return; // –¥–æ –ø–æ–±–∞—á–µ–Ω–Ω—è
//       }

//       // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä–æ–∑–º—ñ—Ä —Ñ–∞–π–ª—É (–º–∞–∫—Å–∏–º—É–º 5MB)
//       if (file.size > 5 * 1024 * 1024) {
//         setError('Max file size 5MB');
//         return; // –¥–æ –ø–æ–±–∞—á–µ–Ω–Ω—è
//       }
//     }
//   };

//   return (
//     <div>
//       <label>
//         üì∑ Choose photo
//         <input type="file" accept="image/*" onChange={handleFileChange} />
//       </label>
//       {error && <p>{error}</p>}
//     </div>
//   );
// };

// export default AvatarPicker;
//------------------------------------------------------------//

/**–í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –ø—Ä–µ–≤ º—é

–í–∏–∫–æ—Ä–∏—Å—Ç–∞—î–º–æ FileReader, —â–æ–± —Å—Ç–≤–æ—Ä–∏—Ç–∏ –ø—Ä–µ–≤ º—é –¥–ª—è –æ–±—Ä–∞–Ω–æ–≥–æ —Ñ–∞–π–ª—É:

--–¥–æ–¥–∞—î–º–æ —Å—Ç–∞–Ω –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è previewUrl
--–¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è url –∑ —Ñ–∞–π–ª—É –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ FileReader
--—Å—Ç–≤–æ—Ä—é—î–º–æ –µ–∫–∑–µ–º–ø–ª—è—Ä FileReader
--–≤ –º–µ—Ç–æ–¥ onloadend –¥–æ–¥–∞—î–º–æ –ª–æ–≥—ñ–∫—É –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω—É previewUrl
--–≤–∏–∫–ª–∏–∫–∞—î–º–æ readAsDataURL –ø–µ—Ä–µ–¥–∞—é—á–∏ —É –Ω—å–æ–≥–æ —Ñ–∞–π–ª */

//=============================================//

// 'use client';

// import { useState } from 'react';
// import Image from 'next/image';

// const AvatarPicker = () => {
//   const [previewUrl, setpreviewUrl] = useState(''); // –¥–æ–¥–∞—î–º–æ —Å—Ç–∞–Ω –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è previewUrl
//   const [error, setError] = useState('');

//   const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
//     const file = e.target.files?.[0];
//     setError('');

//     if (file) {
//       // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ç–∏–ø —Ñ–∞–π–ª—É
//       if (!file.type.startsWith('image/')) {
//         setError('Only images');
//         return; // –¥–æ –ø–æ–±–∞—á–µ–Ω–Ω—è
//       }

//       // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä–æ–∑–º—ñ—Ä —Ñ–∞–π–ª—É (–º–∞–∫—Å–∏–º—É–º 5MB)
//       if (file.size > 5 * 1024 * 1024) {
//         setError('Max file size 5MB');
//         return; // –¥–æ –ø–æ–±–∞—á–µ–Ω–Ω—è
//       }

//       // –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è url –∑ —Ñ–∞–π–ª—É –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ FileReader
//       // —Å—Ç–≤–æ—Ä—é—î–º–æ –µ–∫–∑–µ–º–ø–ª—è—Ä FileReader

//       const reader = new FileReader();

//       //–≤ –º–µ—Ç–æ–¥ onloadend –¥–æ–¥–∞—î–º–æ –ª–æ–≥—ñ–∫—É –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω—É previewUrl

//       reader.onloadend = () => {
//         setpreviewUrl(reader.result as string);
//       };

//       // –≤–∏–∫–ª–∏–∫–∞—î–º–æ readAsDataURL –ø–µ—Ä–µ–¥–∞—é—á–∏ —É –Ω—å–æ–≥–æ —Ñ–∞–π–ª */

//       reader.readAsDataURL(file);
//     }
//   };

//   return (
//     <div>
//       {/* –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –ø—Ä–µ–≤'—é —è–∫—â–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è —ñ—Å–Ω—É—î */}
//       {previewUrl ? (
//         <Image src={previewUrl} alt="Preview" width={300} height={300} />
//       ) : (
//         <label>
//           üì∑ Choose photo
//           <input type="file" accept="image/*" onChange={handleFileChange} />
//         </label>
//       )}
//       {error && <p>{error}</p>}
//     </div>
//   );
// };

// export default AvatarPicker;

/**–¢–µ–ø–µ—Ä —É –Ω–∞—Å —î –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –≤–∏–±—Ä–∞—Ç–∏ —Ñ–æ—Ç–æ —ñ –ø–æ–±–∞—á–∏—Ç–∏ –π–æ–≥–æ –ø—Ä–µ–≤ º—é, –∞ –¥–∞–ª—ñ –º–∏ —Ä–µ–∞–ª—ñ–∑—É—î–º–æ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —ñ –≤–∏–¥–∞–ª–µ–Ω–Ω—è —Ñ–æ—Ç–æ —á–µ—Ä–µ–∑ –∑–æ–≤–Ω—ñ—à–Ω—é —Ñ–æ—Ä–º—É, —è–∫–∞ –±—É–¥–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏ –∑–∞ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –≤—Å—å–æ–≥–æ –ø—Ä–æ—Ñ—ñ–ª—é. */

//------------------------------------------------//

/** –ü—Ä–æ–ø—Å –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è

- –î–æ–¥–∞—î–º–æ AvatarPicker –ø—Ä–æ–ø profilePhotoUrl, —Ç–æ–±—Ç–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ñ–æ—Ç–æ, —è–∫–µ    –±–µ–∫–µ–Ω–¥ –ø–æ–≤–µ—Ä—Ç–∞—î –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –∞–±–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ. 
- –ß–µ—Ä–µ–∑ useEffect –∑–∞–ø–∏—à–µ–º–æ —Ü–µ –∑–Ω–∞—á–µ–Ω–Ω—è –≤ —Å—Ç–∞–Ω.*/
//=====================================================//

'use client';

import { useEffect, useState } from 'react';
import Image from 'next/image';

type Props = {
  profilePhotoUrl?: string;
};

const AvatarPicker = ({ profilePhotoUrl }: Props) => {
  const [previewUrl, setpreviewUrl] = useState<string>('');
  const [error, setError] = useState<string>('');

  useEffect(() => {
    if (profilePhotoUrl) {
      setpreviewUrl(profilePhotoUrl);
    }
  }, [profilePhotoUrl]);

  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const file = e.target.files?.[0];
    setError('');

    if (file) {
      if (!file.type.startsWith('image/')) {
        setError('Only images');
        return;
      }

      if (file.size > 5 * 1024 * 1024) {
        setError('Max file size 5MB');
        return;
      }

      const reader = new FileReader();

      reader.onloadend = () => {
        setpreviewUrl(reader.result as string);
      };

      reader.readAsDataURL(file);
    }
  };

  return (
    <div>
      {/* –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –ø—Ä–µ–≤'—é —è–∫—â–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è —ñ—Å–Ω—É—î */}
      {previewUrl ? (
        <Image src={previewUrl} alt="Preview" width={300} height={300} />
      ) : (
        <label>
          üì∑ Choose photo
          <input type="file" accept="image/*" onChange={handleFileChange} />
        </label>
      )}
      {error && <p>{error}</p>}
    </div>
  );
};

export default AvatarPicker;
